# Configuration for C++ SDRTrunk Transcriber

# Directory to monitor for new MP3 files
# used in main.cpp
DirectoryToMonitor: "/usr/src/app/cpp-sdrtrunk-transcriber/"

# Number of seconds we should wait before we check the directory after processing
# the files that were in it. This is to prevent the program from using too much CPU.
# used in main.cpp
LoopWaitSeconds: 60

# OpenAI API Key for transcription
OPENAI_API_KEY: "YOUR_API_KEY"

# Minimum duration in seconds for an MP3 file to be processed
# used in fileProcessor.cpp
MIN_DURATION_SECONDS: 9

# MAX_RETRIES: The maximum number of times the program will attempt to reprocess a file 
# before giving up if it encounters errors or invalid responses.
# used in curlHelper.cpp
MAX_RETRIES: 3

# MAX_REQUESTS_PER_MINUTE: The maximum number of requests that can be sent to the API 
# within RATE_LIMIT_WINDOW_SECONDS. This is to comply with the API's rate limiting policies.
# used in curlHelper.cpp
MAX_REQUESTS_PER_MINUTE: 50

# ERROR_WINDOW_SECONDS: The time window in seconds for tracking API errors. 
# If the number of errors exceeds a 25% threshold within this window, 
# the program will exit.
# used in curlHelper.cpp
ERROR_WINDOW_SECONDS: 300

# RATE_LIMIT_WINDOW_SECONDS: The time window in seconds for enforcing the rate limit. 
# The program tracks the number of requests made in this period and ensures 
# it doesn't exceed the maximum allowed requests per minute.
# used in curlHelper.cpp
RATE_LIMIT_WINDOW_SECONDS: 60

# TODO:
# utilize the SDRTrunk playlist XML to convert 
# talkgroup ID to names
# radio ID to names 
XML_PATH: "/home/YOUR_USER/SDRTrunk/playlist/default.xml"

# sqlite3 database for saving file information and transcriptions
# we will be initializing this database
# schema in DatabaseManager
DATABASE_PATH: "/usr/src/app/cpp-sdrtrunk-transcriber/build/recordings.db"

# JSON object files for tensigns
TENSIGN_FILE: "/usr/src/app/cpp-sdrtrunk-transcriber/howToFormatYourJSON.json"
NCSHP_TENSIGN_FILE: "/usr/src/app/cpp-sdrtrunk-transcriber/howToFormatYourJSON.json"

# JSON object files for callsigns
CALLSIGNS_FILE: "/usr/src/app/cpp-sdrtrunk-transcriber/howToFormatYourJSON.json"
NCSHP_CALLSIGNS_FILE: "/usr/src/app/cpp-sdrtrunk-transcriber/howToFormatYourJSON.json"

# JSON object files for signals
SIGNALS_FILE: "/usr/src/app/cpp-sdrtrunk-transcriber/howToFormatYourJSON.json"
NCSHP_SIGNALS_FILE: "/usr/src/app/cpp-sdrtrunk-transcriber/howToFormatYourJSON.json"


#############
# DEBUGGING #
#############
# If you want to see verbose output for a specific component, set it to true here.
# Warning: This will generate a lot of output!
DEBUG_CURL_HELPER: false
DEBUG_DATABASE_MANAGER: false
DEBUG_FILE_PROCESSOR: false
DEBUG_MAIN: false
DEBUG_TRANSCRIPTION_PROCESSOR: false